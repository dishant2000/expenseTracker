{"version":3,"sources":["components/card/index.js","components/historyList/index.js","data.js","components/currencySelect/index.js","components/expenseForm/index.js","components/barChart/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","cash","type","currency","inrToUsd","className","style","color","fontSize","HistoryList","tableref","dataList","ref","map","transaction","idx","title","date","borderRight","amount","data","total","totalExpense","totalIncome","transactions","CurrencySelector","setCurrency","onChange","e","target","value","name","defaultValue","ExpenseForm","formSubmitHandler","allRef","formMain","onSubmit","placeholder","required","defaultChecked","BarChart","datalist","useState","income","setIncome","expense","setExpense","useEffect","extractData","today","Date","currentYear","parseInt","getFullYear","expenseData","incomeData","i","forEach","item","temp","split","tmonth","tyear","labels","datasets","label","backgroundColor","options","responsive","animation","duration","scales","x","stacked","y","s","JSON","stringify","database","parse","App","formToggleButton","useRef","searchBar","dataTable","totalMoney","setTotalMoney","setTotalIncome","setTotalExpense","setDatalist","isFormOpen","setIsFormOpen","getTodayDate","dd","String","getDate","padStart","mm","getMonth","yyyy","usdToInr","fontWeight","margin","onClick","preventDefault","currAmount","current","currentTotal","newData","newDataList","push","reset","display","width","justifyContent","alignItems","console","log","jsPDF","html","callback","doc","save","borderRadius","cursor","searchStr","newList","filter","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3db99f9f.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\nfunction Card(props) {\n    const {cash, type,currency,inrToUsd} = props;\n    return (\n        <div className = \"card-wrapper\">\n            <div className = \"card-header\">\n                {type}\n            </div>\n            <div style = {type === 'Income' ? {color : \"green\"} : {color : \"red\"}} className = \"card-Body\">\n                <span style = {{fontSize : \"small\"}}>{currency === 'INR' ? 'Rs' : \"$\"}</span>{currency === 'INR' ? cash : inrToUsd(cash)}\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport './index.css'\nfunction HistoryList(props) {\n    const {tableref, dataList,currency,inrToUsd} = props\n    return (\n        <table ref = {tableref} className = \"dataTable\">\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Date</th>\n                    <th>Amount</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    dataList.map((transaction,idx)=>{\n                        return(\n                            <tr key = {idx}>\n                                <td>{transaction.title}</td>\n                                <td>{transaction.date}</td>\n                                <td style = {transaction.type === 'income' ? {borderRight : \"5px green solid\"} : {borderRight : \"5px red solid\"}}>\n                                    <span>{currency === 'INR' ? transaction.amount : inrToUsd(transaction.amount)}</span>\n                                </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </table>\n    )\n}\n\nexport default HistoryList\n","const data = {\n    total : 206700,\n    totalExpense : 113500,\n    totalIncome : 320200,\n    transactions : [\n        {title : \"rent\",date : \"1/1/2023\", amount : \"10000\",type : \"expense\"},\n        {title : \"food\",date : \"20/1/2023\", amount : \"3500\",type : \"expense\"},\n        {title : \"salary\",date : \"24/1/2023\", amount : \"40000\",type : \"income\"},\n        {title : \"cash\",date : \"11/2/2023\", amount : \"200\",type : \"income\"},\n        {title : \"food\",date : \"15/2/2023\", amount : \"2000\",type : \"expense\"},\n        {title : \"salary\",date : \"24/2/2023\", amount : \"40000\",type : \"income\"},\n        {title : \"rent\",date : \"1/3/2023\", amount : \"10000\",type : \"expense\"},\n        {title : \"food\",date : \"20/3/2023\", amount : \"3500\",type : \"expense\"},\n        {title : \"salary\",date : \"24/3/2023\", amount : \"40000\",type : \"income\"},\n        {title : \"rent\",date : \"1/4/2023\", amount : \"10000\",type : \"expense\"},\n        {title : \"shoes\",date : \"10/4/2023\", amount : \"2500\",type : \"expense\"},\n        {title : \"food\",date : \"20/4/2023\", amount : \"3500\",type : \"expense\"},\n        {title : \"salary\",date : \"24/4/2023\", amount : \"40000\",type : \"income\"},\n        {title : \"rent\",date : \"1/5/2023\", amount : \"10000\",type : \"expense\"},\n        {title : \"food\",date : \"20/5/2023\", amount : \"3500\",type : \"expense\"},\n        {title : \"clothes\",date : \"21/5/2023\", amount : \"4500\",type : \"expense\"},\n        {title : \"salary\",date : \"24/5/2023\", amount : \"40000\",type : \"income\"},\n        {title : \"rent\",date : \"1/6/2023\", amount : \"10000\",type : \"expense\"},\n        {title : \"food\",date : \"20/6/2023\", amount : \"3500\",type : \"expense\"},\n        {title : \"salary\",date : \"24/6/2023\", amount : \"40000\",type : \"income\"},\n        {title : \"rent\",date : \"1/7/2023\", amount : \"15000\",type : \"expense\"},\n        {title : \"food\",date : \"20/7/2023\", amount : \"3500\",type : \"expense\"},\n        {title : \"salary\",date : \"24/7/2023\", amount : \"40000\",type : \"income\"},\n        {title : \"rent\",date : \"1/8/2023\", amount : \"15000\",type : \"expense\"},\n        {title : \"food\",date : \"20/8/2023\", amount : \"3500\",type : \"expense\"},\n        {title : \"salary\",date : \"24/8/2023\", amount : \"40000\",type : \"income\"},\n    ]\n}\n\nexport default data;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// helper code\n// let te = 0;\n    // let ti = 0;\n    // data.transactions.forEach(item => {\n    //   if(item.type === 'income'){\n    //     ti += parseInt(item.amount);\n    //   }\n    //   else{\n    //     te += parseInt(item.amount);\n    //   }\n    // })\n    // console.log(te);","import React from 'react'\nimport './index.css'\nfunction CurrencySelector(props) {\n    const {setCurrency} = props;\n    const handleChangeReq = (e)=>{\n        setCurrency(e.target.value);\n    }\n    return (\n        <select onChange = {setCurrency ? handleChangeReq : null } name=\"currencySelect\" className = \"currency-select\" defaultValue = \"INR\">\n            <option value=\"INR\">INR</option>\n            <option value=\"USD\">USD</option>\n        </select>\n    )\n}\n\nexport default CurrencySelector\n","import React from 'react'\nimport CurrencySelector from '../currencySelect';\nimport './index.css'\nfunction ExpenseForm(props) {\n    const {formSubmitHandler,allRef} = props;\n    return (\n        <div className = \"form-wrapper\">\n            <form ref = {allRef.formMain} className = \"expenseform\" onSubmit = {formSubmitHandler}>\n                <input  name = \"amount\" type = \"number\" placeholder = \"amount\" required/>\n                <CurrencySelector/>\n                <br/>\n                <input  name = \"title\" type = \"text\" placeholder = \"title\" required/><br/>\n                <div>\n                <input  type = \"radio\" name = \"transType\" value = \"expense\" required defaultChecked/>\n                <label>Expense</label>\n                <input  type = \"radio\" name = \"transType\" value = \"income\" required/>\n                <label>Income</label>\n                </div>\n                <button type = \"submit\">Add Transaction</button>\n            </form>\n        </div>\n    )\n}\n\nexport default ExpenseForm\n","import React,{useState,useEffect} from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport './index.css'\nfunction BarChart(props) {\n    const {datalist,currency, inrToUsd} = props;\n    const [income,setIncome] = useState([]);\n    const [expense,setExpense] = useState([]);\n    useEffect(() => {\n        extractData();\n    }, [props])\n    const extractData = ()=>{\n        let today = new Date();\n        let currentYear = parseInt(today.getFullYear());\n        let expenseData = [];\n        let incomeData = [];\n        for(let i = 0 ; i < 12; i++){\n            expenseData[i] = 0;\n            incomeData[i] = 0;\n        }\n        datalist.forEach(item => {\n            let temp = item.date.split('/');\n            let tmonth = parseInt(temp[1]);\n            let tyear = parseInt(temp[2]);\n            if(item.type === 'income' && tyear === currentYear){\n                incomeData[tmonth - 1] += currency === 'INR' ? parseInt(item.amount) : inrToUsd(parseInt(item.amount));\n            }\n            else if(item.type === 'expense' && tyear === currentYear){\n                expenseData[tmonth - 1] += currency === 'INR' ? parseInt(item.amount) : inrToUsd(parseInt(item.amount));\n            }\n        })\n        setIncome(incomeData);\n        setExpense(expenseData);\n    }\n    const data = {\n        labels : ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        datasets : [\n            {\n                label : \"expenses\",\n                data : expense,\n                backgroundColor: \"#FF616D\",\n            },\n            {\n                label : \"income\",\n                // data : [2000,8590,5780,2450,3560,1560,2400,5200,6700,1540,5000,2000],\n                data : income,\n                backgroundColor: \"#66DE93\"\n            }\n        ]\n    }\n    const options =  {\n        responsive:true,\n        animation:{\n            duration:0\n        },\n        scales: {\n          x:{\n              stacked : true\n          },\n          y:{\n              stacked:true\n          }\n        }\n      }\n    return (\n        <div>\n            <Bar data = {data} options = {options}/>\n        </div>\n    )\n}\n\nexport default BarChart\n","import {useState,useEffect,useRef} from 'react'\nimport './App.css';\nimport Card from './components/card';\nimport HistoryList from './components/historyList';\nimport database from './data'\nimport ExpenseForm from './components/expenseForm';\nimport jsPDF from 'jspdf';\nimport BarChart from './components/barChart';\nimport CurrencySelector from './components/currencySelect';\nconst s = JSON.stringify(database);\nconst data = JSON.parse(s);\nfunction App() {\n  const formToggleButton = useRef(null);\n  const formMain = useRef(null);\n  const searchBar = useRef(null);\n  const dataTable = useRef(null);\n  const [totalMoney, setTotalMoney] = useState(data.total);\n  const [totalIncome, setTotalIncome] = useState(data.totalIncome);\n  const [totalExpense, setTotalExpense] = useState(data.totalExpense);\n  const [datalist, setDatalist] = useState(data.transactions);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [currency, setCurrency] = useState(\"INR\");\n  const getTodayDate = ()=>{\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = dd + '/' + mm + '/' + yyyy;\n    return today;\n  }\n  const onFormSubmitHandler = (e) => {\n    e.preventDefault();\n    let currCurrency = formMain.current[\"currencySelect\"].value;\n    let currAmount = currCurrency === 'INR' ? parseInt(formMain.current['amount'].value) : usdToInr(parseInt(formMain.current['amount'].value));\n    let currentTotal = totalMoney;\n    if(formMain.current['transType'].value === 'income'){\n      currentTotal += currAmount;\n      \n    }\n    else if(formMain.current['transType'].value === 'expense'){\n      currentTotal -= currAmount;\n      \n    }\n    else{\n      return;\n    }\n    \n    const newData = {\n      title : formMain.current['title'].value,\n      date : getTodayDate(),\n      amount : currAmount,\n      type : formMain.current['transType'].value\n    }\n    const newDataList = [...datalist];\n    newDataList.push(newData);\n    data.totalExpense = totalExpense + currAmount;\n    data.totalIncome = totalIncome + currAmount;\n    data.total = currentTotal;\n    data.transactions = [...newDataList];\n    setTotalIncome(totalIncome + currAmount);\n    setTotalExpense(totalExpense + currAmount);\n    setTotalMoney(currentTotal);\n    setDatalist(newDataList);\n    formMain.current.reset();\n  }\n  const searchHandler = (e)=>{\n    e.preventDefault();\n    let searchStr = searchBar.current.value;\n\n    let newList = data.transactions.filter(item => item.title.includes(searchStr));\n    setDatalist(newList);\n  }\n  const exportHandler = ()=>{\n    console.log(dataTable.current);\n    const doc = new jsPDF('p', 'pt','a4',true);\n    doc.html(dataTable.current,{\n      callback : function(doc){\n        doc.save(\"my-expense.pdf\");\n      },\n      margin : [10,10,10,10]\n    });\n  }\n  const inrToUsd = (cash)=>{\n    cash = parseInt(cash);\n    return parseInt(cash/72);\n  }\n  const usdToInr = (cash)=>{\n    cash = parseInt(cash);\n    return parseInt(cash*72);\n  }\n  useEffect(() => {\n  }, [])\n  return (\n    <div className = \"main-wrapper\">\n      {/* header */}\n      <h1 className = \"header-wrapper\">  \n        Expense Tracker\n      </h1>\n      {/* Balance section */}\n      <div className = \"balance-wrapper\"> \n          <div className = \"curr-balance\">\n            <span style = {{fontSize : \"smaller\",fontWeight : \"500\"}}>YOUR BALANCE</span><br/>\n            <span style = {{fontSize :\"x-large\",fontWeight : \"bold\",margin : \"0 10px\"}}>{currency === 'INR' ? 'Rs' : \"$\"} {currency === 'INR' ? totalMoney : inrToUsd(totalMoney)}</span>\n            <CurrencySelector setCurrency = {setCurrency}/>\n          </div>\n          <button ref = {formToggleButton} className = \"add-exp\" onClick = {()=>{setIsFormOpen(!isFormOpen)}}>\n            {isFormOpen ? <span>X</span> : <span>Add</span>}\n          </button>\n      </div>\n      {isFormOpen ? <ExpenseForm allRef = {{formMain}} formSubmitHandler = {onFormSubmitHandler}/>:null}\n      {/*income and expense cards section */}\n      <div className = \"exp-display\">\n        <Card type = \"Expense\" cash = {totalExpense} currency = {currency} inrToUsd = {inrToUsd}/>\n        <Card type = \"Income\" cash = {totalIncome} currency = {currency} inrToUsd = {inrToUsd}/>\n      </div>\n      {/*bar chart*/}\n      <div>\n        <BarChart datalist = {datalist} currency = {currency} inrToUsd = {inrToUsd}/>\n      </div>\n      {/*history panel*/}\n      <div className = \"history-wrapper\">\n        <div style = {{display : \"flex\", width : \"100%\",justifyContent : \"space-between\", alignItems : \"center\"}}>\n        <h3>History</h3>\n        <button onClick = {exportHandler} style = {{backgroundColor : \"black\", color : \"white\", borderRadius : \"5px\", cursor : \"pointer\"}}>export</button>\n        </div>\n        <div className = \"history-search\">\n          <input ref = {searchBar} onChange = {searchHandler} className = \"search-input\" placeholder = \"search\"></input>\n        </div>\n        <div className = \"history-list\">\n          <HistoryList tableref = {dataTable} dataList = {datalist} currency = {currency} inrToUsd = {inrToUsd}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}